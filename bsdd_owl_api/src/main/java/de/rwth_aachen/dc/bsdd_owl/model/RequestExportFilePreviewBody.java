/*
 * bSDD API prototype
 * API to access the buildingSMART Data Dictionary
 *
 * OpenAPI spec version: v1
 * Contact: bsdd_support@buildingsmart.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package de.rwth_aachen.dc.bsdd_owl.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.File;
import java.io.IOException;
/**
 * RequestExportFilePreviewBody
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-09-21T11:35:32.475Z[GMT]")
public class RequestExportFilePreviewBody {
  @SerializedName("XsltFormFile")
  private File xsltFormFile = null;

  public RequestExportFilePreviewBody xsltFormFile(File xsltFormFile) {
    this.xsltFormFile = xsltFormFile;
    return this;
  }

   /**
   * The format the download should be in. Only applicable for Export Format &#x27;Custom&#x27;
   * @return xsltFormFile
  **/
  @Schema(description = "The format the download should be in. Only applicable for Export Format 'Custom'")
  public File getXsltFormFile() {
    return xsltFormFile;
  }

  public void setXsltFormFile(File xsltFormFile) {
    this.xsltFormFile = xsltFormFile;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RequestExportFilePreviewBody requestExportFilePreviewBody = (RequestExportFilePreviewBody) o;
    return Objects.equals(this.xsltFormFile, requestExportFilePreviewBody.xsltFormFile);
  }

  @Override
  public int hashCode() {
    return Objects.hash(Objects.hashCode(xsltFormFile));
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RequestExportFilePreviewBody {\n");
    
    sb.append("    xsltFormFile: ").append(toIndentedString(xsltFormFile)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
