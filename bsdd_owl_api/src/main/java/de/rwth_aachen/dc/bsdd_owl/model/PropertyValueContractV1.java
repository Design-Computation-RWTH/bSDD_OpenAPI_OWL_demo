/*
 * bSDD API prototype
 * API to access the buildingSMART Data Dictionary
 *
 * OpenAPI spec version: v1
 * Contact: bsdd_support@buildingsmart.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package de.rwth_aachen.dc.bsdd_owl.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * PropertyValueContractV1
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-09-21T11:35:32.475Z[GMT]")
public class PropertyValueContractV1 {
  @SerializedName("namespaceUri")
  private String namespaceUri = null;

  @SerializedName("code")
  private String code = null;

  @SerializedName("value")
  private String value = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("sortNumber")
  private Integer sortNumber = null;

  public PropertyValueContractV1 namespaceUri(String namespaceUri) {
    this.namespaceUri = namespaceUri;
    return this;
  }

   /**
   * Globally unique identification of the value (if present)
   * @return namespaceUri
  **/
  @Schema(description = "Globally unique identification of the value (if present)")
  public String getNamespaceUri() {
    return namespaceUri;
  }

  public void setNamespaceUri(String namespaceUri) {
    this.namespaceUri = namespaceUri;
  }

  public PropertyValueContractV1 code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Identification of the value (unique within the property)
   * @return code
  **/
  @Schema(description = "Identification of the value (unique within the property)")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public PropertyValueContractV1 value(String value) {
    this.value = value;
    return this;
  }

   /**
   * Possible value of the property
   * @return value
  **/
  @Schema(required = true, description = "Possible value of the property")
  public String getValue() {
    return value;
  }

  public void setValue(String value) {
    this.value = value;
  }

  public PropertyValueContractV1 description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Description of the value
   * @return description
  **/
  @Schema(description = "Description of the value")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public PropertyValueContractV1 sortNumber(Integer sortNumber) {
    this.sortNumber = sortNumber;
    return this;
  }

   /**
   * (Optional) Sort number of value within the list of values for the Property
   * @return sortNumber
  **/
  @Schema(description = "(Optional) Sort number of value within the list of values for the Property")
  public Integer getSortNumber() {
    return sortNumber;
  }

  public void setSortNumber(Integer sortNumber) {
    this.sortNumber = sortNumber;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PropertyValueContractV1 propertyValueContractV1 = (PropertyValueContractV1) o;
    return Objects.equals(this.namespaceUri, propertyValueContractV1.namespaceUri) &&
        Objects.equals(this.code, propertyValueContractV1.code) &&
        Objects.equals(this.value, propertyValueContractV1.value) &&
        Objects.equals(this.description, propertyValueContractV1.description) &&
        Objects.equals(this.sortNumber, propertyValueContractV1.sortNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(namespaceUri, code, value, description, sortNumber);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PropertyValueContractV1 {\n");
    
    sb.append("    namespaceUri: ").append(toIndentedString(namespaceUri)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    sortNumber: ").append(toIndentedString(sortNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
